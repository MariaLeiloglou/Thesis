{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf840
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 20/01/2021\
\

\b \
Code for spot tracking from frame 1 to frame 2: \'93detect21_11_2020_frame2.py\'94\
\
Uses hough circle transform for spot segmentation and a simple labelling of segmented spots based on the nearest spot from previous frame.\
The nearest neighbours can be found by the calculation of the Euclidean distance between the centre of the spots segmented in the new frame and the centre of the spots in the previous frame. Before this distance calculation is made, the locations of the spots\'92 centres in frame 1 is corrected by shifting them according to the weighted shift (average shift out of all spots between frame 1 and frame 2). Detailed explanation can be found in the code.\
\
inputs:\
-labels.txt : labels of spots of frame 1\
-centrex.txt : corresponding x location of the centre of spots of frame 1\
-centrey.txt : corresponding y location of the centre of spots of frame 1\
-centreradi.txt : corresponding radius of spots of frame 1\
-mono2.png: image of frame 2 where the spots need to be tracked\
\

\b0 \

\b outputs:
\b0 \

\b -An image \'93closest neighbours.png\'94 with all the spots segmented and identified\
(In this example 14 spots are not identified)\
-An image \'93shifted labels.png\'94 showing the spots identified and the movement (in a thin line) after correction of the reference spots\'92 based on the weighted shift.}